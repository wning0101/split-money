{"version":3,"sources":["member.js","spend.js","payer.js","sharer.js","settle.js","login.js","register.js","index.js"],"names":["Member","props","name","balance","Spend","shares","i","share","length","n","substring","pay","amount","sub","Payer","value","Sharer","id","type","Settle","give","recieve","Login","email","password","onClick","login","Register","register","Note","add_member","new_each_spend","state","each_spend","new_each_share","each_share","new_members","members","input","String","document","getElementById","includes","alert","push","Number","setState","number","update_data","add_spending","subject","sharer","checked","share_number","cur_share","cur_spend","cur_record","record","total_spend","settle","help_login","displayTodos","help_register","hash","sha256","create","update","db","collection","findOne","owner_id","then","result","insertOne","hex","data","owner","bind","this","client","Stitch","initializeDefaultAppClient","mongodb","getServiceClient","RemoteMongoClient","factory","login_name","login_pass","updateOne","$set","pos","neg","equ","compare","a","b","compare2","sort","temp","transfer","shift","key","Members","map","item","Spends","Payers","Sharers","Settles","class","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.8d945486.chunk.js","sourcesContent":["import React from \"react\"\n\n\nfunction Member(props){\n        return(\n            <div>\n                <li> {props.name}: {props.balance} </li>\n            </div>\n        )\n}\n\nexport default Member","import React from 'react'\n\nfunction Spend(props){\n    let shares = \" \"\n    for(let i=0; i<props.share.length; i++){\n        shares += props.share[i] + \", \"\n    }\n    var n = shares.length\n    shares = shares.substring(0, n-2)\n    return(\n    <li>{props.pay} paid ${props.amount} for {props.sub} [{shares}] </li>\n    );\n}\n\nexport default Spend; ","import React from 'react'\n\nfunction Payer(props){\n    return(\n        <option value={props.name}> {props.name} </option>\n    );\n}\n\nexport default Payer","import React from 'react'\n\nfunction Sharer(props){\n    return(\n        <div>\n        <input id={props.name} type=\"checkbox\" name={props.name}/> {props.name}\n        </div>\n    );\n}\n\nexport default Sharer","import React from 'react'\n\nfunction Settle(props){\n    return(\n        <li> {props.give} gives {props.recieve} {props.amount} dollars. </li>\n    );\n}\n\nexport default Settle","import React from \"react\"\n\nfunction Login(props){\n    if (props.email == \"\" || props.password == \"\"){\n        return(\n            <>\n            <p> Email: </p> <input id=\"email_l\"></input>\n            <p> password: </p> <input id=\"password_l\"></input>\n            <button onClick={props.login}>Login</button>\n            </>\n        )\n    }\n    else{\n        return(\n        <a> Hello, {props.name}</a>\n        )\n    }\n}\n\nexport default Login;","import React from \"react\"\n\nfunction Register(props){\n    if (props.email == \"\" || props.password == \"\"){\n        return(\n            <>\n            <p> Name: </p> <input id=\"name_r\"></input>\n            <p> Email: </p> <input id=\"email_r\"></input>\n            <p> password: </p> <input id=\"password_r\"></input>\n            <button onClick={props.register}>Register</button>\n            </>\n        )\n    }\n    else{\n        return(\n        <a></a>\n        )\n    }\n}\n\nexport default Register;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Member from './member'\nimport Spend from './spend'\nimport Payer from './payer'\nimport Sharer from './sharer'\nimport Settle from './settle'\nimport Login from './login'\nimport {\n    Stitch,\n    UserPasswordCredential,\n    RemoteMongoClient\n  } from \"mongodb-stitch-browser-sdk\";\nimport Register from './register';\nimport sha256 from 'js-sha256';\n\n// import * as serviceWorker from './serviceWorker';\n\nclass Note extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            owner: \"\",\n            name: \"\",\n            password: \"\",\n            number: 0,\n            total_spend: 0,\n            members: [],\n            result: [],\n            record : [],\n            each_spend : {},\n            each_share : {},\n        }\n        this.add_member = this.add_member.bind(this)\n        this.add_spending = this.add_spending.bind(this)\n        this.settle = this.settle.bind(this)\n        this.displayTodos = this.displayTodos.bind(this)\n        this.help_login = this.help_login.bind(this)\n    }\n    \n\n    componentDidMount() {\n        // Initialize the App Client\n        this.client = Stitch.initializeDefaultAppClient(\"split-money-filxi\");\n        var mongodb = this.client.getServiceClient(\n            RemoteMongoClient.factory,\n            \"mongodb-atlas\"\n        );\n        this.db = mongodb.db(\"SP\");\n        \n    }\n\n \n    displayTodos(login_name, login_pass) {\n        var hash = sha256.create();\n        hash.update(login_pass + \"$@^%$qwd\");\n        this.db\n            .collection(\"SP\")\n            .findOne({owner_id: login_name, password: hash.hex()})\n            .then( result => {\n                // var myJSON = JSON.stringify(result.data);\n                if (result == null){\n                    alert(\"Invalid login. Please check your email and password.\")\n                    return false;\n                }\n                this.setState({\n                    \n                    owner: result.data.owner,\n                    password: result.data.password,\n                    name: result.data.name,\n                    number: result.data.number,\n                    total_spend: result.data.total_spend,\n                    members: result.data.members,\n                    result: result.data.result,\n                    record : result.data.record,\n                    each_spend : result.data.each_spend,\n                    each_share : result.data.each_share,\n                })\n                return result});\n    }\n    update_data() {\n        this.db.collection(\"SP\").updateOne(\n            {owner_id: this.state.owner,\n             password: this.state.password},\n            {$set: {data: this.state} }\n        )\n    }\n    add_data() {\n        this.db\n            .collection(\"SP\")\n            .insertOne({\n            owner_id: document.getElementById(\"email_r\").value,\n            password: document.getElementById(\"password_r\").value,\n            name : document.getElementById(\"name_r\").value,\n            data: [this.state]\n            })\n            .then();\n    }\n    \n\n    add_member = () => {\n        var new_each_spend = this.state.each_spend;\n        var new_each_share = this.state.each_share;\n        var new_members = this.state.members;\n        var input = String(document.getElementById(\"name\").value);\n        if (input == \"\") {\n            alert(\"Please don't enter empty name\")\n            return;\n        }\n        if (this.state.members.includes(input)) {\n            alert(input + \" already exists\");\n            return;\n        }\n        new_members.push(input);\n        new_each_spend[input] = Number(0);\n        new_each_share[input] = Number(0);\n        this.setState({\n            number : this.state.number+1,\n            members : new_members,\n            each_spend : new_each_spend,\n            each_share : new_each_share, \n        });\n        this.update_data()\n    }\n    // Don't use add_spending()\n    add_spending = () => {\n        var pay = String(document.getElementById(\"payer\").value);\n        var amount = document.getElementById(\"amount\").value;\n        if (amount<=0){\n            alert(\"The amount can't be equal or less than zero.\")\n            return;\n        }\n        var subject = String(document.getElementById(\"subject\").value);\n        if (subject == \"\"){\n            alert(\"Empty subject.\")\n            return;\n        }\n        var sharer = []\n        var i = 0\n        for (i=0;i<this.state.members.length;i++){\n            if (document.getElementById(String(this.state.members[i])).checked == true){\n                sharer.push(this.state.members[i]);\n            }\n        }\n        var share_number = sharer.length;\n        if (share_number == 0){\n            alert(\"There's no sharer.\")\n            return;\n        }\n        var cur_share = this.state.each_share;\n        var cur_spend = this.state.each_spend;\n        cur_spend[pay] = Number(cur_spend[pay]) + Number(amount);\n        for (i=0;i<share_number;i++){\n            cur_share[sharer[i]] += amount/share_number;\n        }\n        var cur_record = this.state.record;\n        \n        cur_record.push([pay, amount, sharer, subject])\n        this.setState({\n            total_spend : this.state.total_spend + amount,\n            each_share : cur_share,\n            each_spend : cur_spend,\n            record : cur_record\n        })\n\n        this.settle();\n        this.update_data()\n        return;\n    }\n\n    settle() {\n        var pos = [];\n        var neg = [];\n        var equ = [];\n        var record = [];\n        var i = 0;\n        for(i=0; i < this.state.members.length;i++){\n            var name = this.state.members[i];\n            var balance = this.state.each_spend[name] - this.state.each_share[name];\n            if (balance>0){\n                pos.push([balance, name]);\n            }\n            else if (balance<0){\n                neg.push([balance, name]);\n            }\n            else{\n                equ.push([0, name]);\n            }\n        }\n        function compare(a, b) {\n            if (a[0] < b[0]) return -1;\n            if (a[0] > b[0]) return 1;\n            return 0;\n        }\n        function compare2(a, b) {\n            if (a[0] < b[0]) return 1;\n            if (a[0] > b[0]) return -1;\n            return 0;\n        }\n        pos = pos.sort(compare);\n        neg = neg.sort(compare2);\n        var temp = [];\n        while(pos.length > 0 && neg.length > 0 ){\n            var transfer = pos[0][0] + neg[0][0];\n            if (transfer>0){\n                record.push([neg[0][1], pos[0][1], -neg[0][0]]);\n                pos[0][0] += neg[0][0];\n                temp = [pos[0][0], pos[0][1]];\n                pos.shift();\n                neg.shift();\n                pos.push(temp);\n                pos = pos.sort(compare)\n            }\n            else if(transfer<0){\n                record.push([neg[0][1], pos[0][1], pos[0][0]]);\n                neg[0][0] += pos[0][0];\n                temp = [neg[0][0], neg[0][1]];\n                pos.shift();\n                neg.shift();\n                neg.push(temp);\n                neg = neg.sort(compare2);\n            }\n            else{\n                record.push([neg[0][1], pos[0][1], pos[0][0]]);\n                pos.shift();\n                neg.shift();\n            }\n        }\n        this.setState({\n            result: record,\n        })\n        return;\n    }\n    help_login = () => {\n        this.displayTodos(document.getElementById(\"email_l\").value, document.getElementById(\"password_l\").value);\n        \n            // alert(\"Invalid login. Please check your email and password.\")\n    }\n\n    login(){\n        return <Login key={this.state.owner} email={this.state.owner} password={this.state.password} name={this.state.name}\n                login={this.help_login}\n                />\n    }\n\n    help_register = () => {\n        // this.add_data();\n        var check = false;\n        var hash = sha256.create();\n        hash.update(document.getElementById(\"password_r\").value + \"$@^%$qwd\");\n        // hash.hex();\n        this.db\n            .collection(\"SP\")\n            .findOne({owner_id: document.getElementById(\"email_r\").value})\n            .then( result => { \n                if (result != null){\n                    alert(\"This email is already registered.\")\n                }\n                else{\n                    this.db\n                    .collection(\"SP\")\n                    .insertOne({\n                    owner_id: document.getElementById(\"email_r\").value,\n                    password: hash.hex(),\n                    name : document.getElementById(\"name_r\").value,\n                    data: {\n                        owner: document.getElementById(\"email_r\").value,\n                        name: document.getElementById(\"name_r\").value,\n                        password: hash.hex(),\n                        number: 0,\n                        total_spend: 0,\n                        members: [],\n                        result: [],\n                        record : [],\n                        each_spend : {},\n                        each_share : {},\n                    }\n                    })\n                    .then();\n                    alert(\"Register Successfully.\")\n                }\n            });\n    }\n\n    register(){\n        return <Register key={this.state.owner} email={this.state.owner} password={this.state.password}\n                register={this.help_register}\n                />\n    }\n\n    // build the html\n    render() {\n        let Members = this.state.members.map(item => <Member key={item} name={item} balance={this.state.each_spend[item] - this.state.each_share[item]}/>)\n        let Spends = this.state.record.map(item => <Spend key={item} pay={item[0]} amount={item[1]} share={item[2]} sub={item[3]} />)\n        let Payers = this.state.members.map(item => <Payer key={item} name={item}/>)\n        let Sharers = this.state.members.map(item => <Sharer key={item} name={item}/>)\n        let Settles = this.state.result.map(item => <Settle key={item} give={item[0]} recieve={item[1]} amount={item[2]}/>)\n        let Login = this.login()\n        let Register = this.register()\n        return(\n        <>\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    {Login}\n                </div>\n                <div class=\"col-sm-6\">\n                    {Register}\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <a>Add a new member: </a>\n                    <input id=\"name\"></input>\n                    <button onClick= {this.add_member}>Add</button><br/>\n                </div>\n                <div class=\"col-sm-4\">\n                    <a>Add a new spending</a>\n                    <br/>\n                    Subject: <br/>\n                    <input id=\"subject\"></input> <br/>\n                    Payer: \n                    <select id=\"payer\">\n                        {Payers}\n                    </select> <br/>\n                </div>\n                <div class=\"col-sm-4\">\n                    <a> </a><br/>\n                    Sharer: \n                    <div id=\"sharer\">\n                        {Sharers}\n                    </div>\n                    Amount: \n                    <input id=\"amount\"></input>\n                    <br/>\n                    <button onClick= {this.add_spending}>Add</button><br/>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <a> Members: </a>\n                    <div> {Members} </div>\n                </div>\n                <div class=\"col-sm-4\">\n                    <a> Spending Record: </a>\n                    <div> {Spends}</div>\n                </div>\n                <div class=\"col-sm-4\">\n                    <a> Final Settle: </a>\n                    <div> {Settles}</div>\n                </div>\n            </div>\n        </>\n        );\n    }\n}\n\n\nReactDOM.render( <Note /> , document.getElementById('note'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}